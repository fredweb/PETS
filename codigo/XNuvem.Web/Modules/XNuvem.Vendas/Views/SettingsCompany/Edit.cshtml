@model XNuvem.Vendas.Models.CompanyViewModel
@using XNuvem.Mvc.Html

<section class="content-header">
    <h1>Dados de conexão da empresa</h1>
</section>

<section class="content">
    @using (Html.XNBeginForm("Edit", "SettingsCompany", "XNuvem.Vendas")) {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-sm-12 col-md-8 col-lg-6">
                <div class="box">
                    <div class="box-body">
                        @Html.EditorFor(m => m.ApplicationDB)
                        @Html.EditorFor(m => m.Name)
                        @Html.EditorFor(m => m.ConnectionString)
                        @Html.EditorFor(m => m.ServerName)
                        @Html.EditorFor(m => m.CompanyDB)
                        @Html.EditorFor(m => m.MinPoolSize)
                        @Html.EditorFor(m => m.MaxPoolSize)
                        @Html.EditorFor(m => m.UserName)
                        @Html.EditorFor(m => m.Password)
                    </div>
                    <div class="box-footer">
                        <button type="submit" class="btn btn-success" title="Salvar" data-xn-save>Salvar</button>
                        <button id="testButton" type="button" class="btn btn-default" title="Testar conexão">Testar</button>
                    </div>
                </div>
            </div>
        </div>
    }
</section>

@section Scripts {
    <script>
        var testUrl = '@Url.Action("Test", "SettingsCompany", new {area = "XNuvem.Vendas" })';
        $(function () {
            $("#testButton").click(function (e) {
                var that = $(this);
                that.prop("disabled", true);
                var wtn = $('<span><i class="fa fa-refresh fa-spin"></i>&nbsp;&nbsp;</span>');
                that.prepend(wtn); // Wainting...
                var form = $(this).parents("form");
                $.ajax({
                    type: 'POST',
                    url: testUrl,
                    data: form.serialize()
                }).done(function (data) {
                    that.prop("disabled", false);
                    wtn.remove();
                    if (data.IsError) {
                        XNuvem.statusMessage.showError("", "Erro: " + data.Messages.join(","));
                    } else if (data.Messages) {
                        XNuvem.statusMessage.showSuccess("Sucesso", data.Messages.join(","))
                    }
                }).fail(function (xhr) {
                    that.prop("disabled", false);
                    wtn.remove();
                    XNuvem.statusMessage.showError("Erro interno", xhr.responseText);
                });
            });
        });
    </script>
}